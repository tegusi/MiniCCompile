Terminals which are not used

   NOT
   MAIN
   THEN
   ASSIGN


State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: Goal $end

    1 @1: /* empty */

    2 Goal: @1 DefnDeclList

    3 DefnDeclList: DefnDeclList VarDefn
    4             | DefnDeclList FuncDefn
    5             | DefnDeclList FuncDecl
    6             | /* empty */

    7 VarDefn: Type Identifier ';'

    8 @2: /* empty */

    9 VarDefn: Type Identifier '[' Integer @2 ']' ';'

   10 VarDecl: Type Identifier
   11        | Type Identifier '[' Integer ']'

   12 @3: /* empty */

   13 FuncDefn: Type Identifier '(' ParaList ')' @3 '{' FuncBody '}'

   14 FuncDecl: Type Identifier '(' ParaList ')' ';'

   15 ParaList: VarDecl
   16         | VarDecl ',' ParaList
   17         | /* empty */

   18 FuncBody: FuncBody FuncDecl
   19         | FuncBody Statement
   20         | /* empty */

   21 Type: INT

   22 @4: /* empty */

   23 Statement: '{' @4 StatementLine '}'

   24 @5: /* empty */

   25 Statement: IF '(' Expression ')' @5 Statement StatementElse

   26 @6: /* empty */

   27 @7: /* empty */

   28 Statement: WHILE @6 '(' Expression ')' @7 Statement
   29          | Identifier '=' Expression ';'
   30          | Identifier '[' Expression ']' '=' Expression ';'
   31          | VarDefn
   32          | RETURN Expression ';'

   33 @8: /* empty */

   34 StatementElse: ELSE @8 Statement
   35              | /* empty */

   36 StatementLine: StatementLine Statement
   37              | /* empty */

   38 p1Expression: Integer
   39             | Identifier
   40             | '!' p1Expression
   41             | MINUS p1Expression
   42             | Identifier '(' IdenList ')'
   43             | Identifier '[' Expression ']'
   44             | '(' Expression ')'

   45 p2Expression: p1Expression
   46             | p2Expression TIMES p1Expression
   47             | p2Expression OVER p1Expression
   48             | p2Expression MOD p1Expression

   49 p3Expression: p2Expression
   50             | p3Expression PLUS p2Expression
   51             | p3Expression MINUS p2Expression

   52 p4Expression: p3Expression
   53             | p4Expression LT p3Expression
   54             | p4Expression EQ p3Expression
   55             | p4Expression GT p3Expression
   56             | p4Expression UNEQ p3Expression

   57 p5Expression: p4Expression
   58             | p5Expression AND p4Expression
   59             | p5Expression OR p4Expression

   60 Expression: p5Expression

   61 IdenList: Integer
   62         | Identifier
   63         | IdenList ',' Identifier
   64         | IdenList ',' Integer
   65         | /* empty */

   66 Integer: INTEGER

   67 Identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 40
'(' (40) 13 14 25 28 42 44
')' (41) 13 14 25 28 42 44
',' (44) 16 63 64
';' (59) 7 9 14 29 30 32
'=' (61) 29 30
'[' (91) 9 11 30 43
']' (93) 9 11 30 43
'{' (123) 13 23
'}' (125) 13 23
error (256)
UNEQ (258) 56
EQ (259) 54
MINUS (260) 41 51
PLUS (261) 50
MOD (262) 48
OVER (263) 47
TIMES (264) 46
LT (265) 53
GT (266) 55
OR (267) 59
AND (268) 58
NOT (269)
RETURN (270) 32
MAIN (271)
INT (272) 21
IF (273) 25
THEN (274)
ELSE (275) 34
WHILE (276) 28
ASSIGN (277)
INTEGER (278) 66
IDENTIFIER (279) 67


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
Goal (36)
    on left: 2, on right: 0
@1 (37)
    on left: 1, on right: 2
DefnDeclList (38)
    on left: 3 4 5 6, on right: 2 3 4 5
VarDefn (39)
    on left: 7 9, on right: 3 31
@2 (40)
    on left: 8, on right: 9
VarDecl (41)
    on left: 10 11, on right: 15 16
FuncDefn (42)
    on left: 13, on right: 4
@3 (43)
    on left: 12, on right: 13
FuncDecl (44)
    on left: 14, on right: 5 18
ParaList (45)
    on left: 15 16 17, on right: 13 14 16
FuncBody (46)
    on left: 18 19 20, on right: 13 18 19
Type (47)
    on left: 21, on right: 7 9 10 11 13 14
Statement (48)
    on left: 23 25 28 29 30 31 32, on right: 19 25 28 34 36
@4 (49)
    on left: 22, on right: 23
@5 (50)
    on left: 24, on right: 25
@6 (51)
    on left: 26, on right: 28
@7 (52)
    on left: 27, on right: 28
StatementElse (53)
    on left: 34 35, on right: 25
@8 (54)
    on left: 33, on right: 34
StatementLine (55)
    on left: 36 37, on right: 23 36
p1Expression (56)
    on left: 38 39 40 41 42 43 44, on right: 40 41 45 46 47 48
p2Expression (57)
    on left: 45 46 47 48, on right: 46 47 48 49 50 51
p3Expression (58)
    on left: 49 50 51, on right: 50 51 52 53 54 55 56
p4Expression (59)
    on left: 52 53 54 55 56, on right: 53 54 55 56 57 58 59
p5Expression (60)
    on left: 57 58 59, on right: 58 59 60
Expression (61)
    on left: 60, on right: 25 28 29 30 32 43 44
IdenList (62)
    on left: 61 62 63 64 65, on right: 42 63 64
Integer (63)
    on left: 66, on right: 9 11 38 61 64
Identifier (64)
    on left: 67, on right: 7 9 10 11 13 14 29 30 39 42 43 62 63


state 0

    0 $accept: . Goal $end

    $default  reduce using rule 1 (@1)

    Goal  go to state 1
    @1    go to state 2


state 1

    0 $accept: Goal . $end

    $end  shift, and go to state 3


state 2

    2 Goal: @1 . DefnDeclList

    $default  reduce using rule 6 (DefnDeclList)

    DefnDeclList  go to state 4


state 3

    0 $accept: Goal $end .

    $default  accept


state 4

    2 Goal: @1 DefnDeclList .
    3 DefnDeclList: DefnDeclList . VarDefn
    4             | DefnDeclList . FuncDefn
    5             | DefnDeclList . FuncDecl

    INT  shift, and go to state 5

    $default  reduce using rule 2 (Goal)

    VarDefn   go to state 6
    FuncDefn  go to state 7
    FuncDecl  go to state 8
    Type      go to state 9


state 5

   21 Type: INT .

    $default  reduce using rule 21 (Type)


state 6

    3 DefnDeclList: DefnDeclList VarDefn .

    $default  reduce using rule 3 (DefnDeclList)


state 7

    4 DefnDeclList: DefnDeclList FuncDefn .

    $default  reduce using rule 4 (DefnDeclList)


state 8

    5 DefnDeclList: DefnDeclList FuncDecl .

    $default  reduce using rule 5 (DefnDeclList)


state 9

    7 VarDefn: Type . Identifier ';'
    9        | Type . Identifier '[' Integer @2 ']' ';'
   13 FuncDefn: Type . Identifier '(' ParaList ')' @3 '{' FuncBody '}'
   14 FuncDecl: Type . Identifier '(' ParaList ')' ';'

    IDENTIFIER  shift, and go to state 10

    Identifier  go to state 11


state 10

   67 Identifier: IDENTIFIER .

    $default  reduce using rule 67 (Identifier)


state 11

    7 VarDefn: Type Identifier . ';'
    9        | Type Identifier . '[' Integer @2 ']' ';'
   13 FuncDefn: Type Identifier . '(' ParaList ')' @3 '{' FuncBody '}'
   14 FuncDecl: Type Identifier . '(' ParaList ')' ';'

    ';'  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14


state 12

    7 VarDefn: Type Identifier ';' .

    $default  reduce using rule 7 (VarDefn)


state 13

    9 VarDefn: Type Identifier '[' . Integer @2 ']' ';'

    INTEGER  shift, and go to state 15

    Integer  go to state 16


state 14

   13 FuncDefn: Type Identifier '(' . ParaList ')' @3 '{' FuncBody '}'
   14 FuncDecl: Type Identifier '(' . ParaList ')' ';'

    INT  shift, and go to state 5

    $default  reduce using rule 17 (ParaList)

    VarDecl   go to state 17
    ParaList  go to state 18
    Type      go to state 19


state 15

   66 Integer: INTEGER .

    $default  reduce using rule 66 (Integer)


state 16

    9 VarDefn: Type Identifier '[' Integer . @2 ']' ';'

    $default  reduce using rule 8 (@2)

    @2  go to state 20


state 17

   15 ParaList: VarDecl .
   16         | VarDecl . ',' ParaList

    ','  shift, and go to state 21

    $default  reduce using rule 15 (ParaList)


state 18

   13 FuncDefn: Type Identifier '(' ParaList . ')' @3 '{' FuncBody '}'
   14 FuncDecl: Type Identifier '(' ParaList . ')' ';'

    ')'  shift, and go to state 22


state 19

   10 VarDecl: Type . Identifier
   11        | Type . Identifier '[' Integer ']'

    IDENTIFIER  shift, and go to state 10

    Identifier  go to state 23


state 20

    9 VarDefn: Type Identifier '[' Integer @2 . ']' ';'

    ']'  shift, and go to state 24


state 21

   16 ParaList: VarDecl ',' . ParaList

    INT  shift, and go to state 5

    $default  reduce using rule 17 (ParaList)

    VarDecl   go to state 17
    ParaList  go to state 25
    Type      go to state 19


state 22

   13 FuncDefn: Type Identifier '(' ParaList ')' . @3 '{' FuncBody '}'
   14 FuncDecl: Type Identifier '(' ParaList ')' . ';'

    ';'  shift, and go to state 26

    $default  reduce using rule 12 (@3)

    @3  go to state 27


state 23

   10 VarDecl: Type Identifier .
   11        | Type Identifier . '[' Integer ']'

    '['  shift, and go to state 28

    $default  reduce using rule 10 (VarDecl)


state 24

    9 VarDefn: Type Identifier '[' Integer @2 ']' . ';'

    ';'  shift, and go to state 29


state 25

   16 ParaList: VarDecl ',' ParaList .

    $default  reduce using rule 16 (ParaList)


state 26

   14 FuncDecl: Type Identifier '(' ParaList ')' ';' .

    $default  reduce using rule 14 (FuncDecl)


state 27

   13 FuncDefn: Type Identifier '(' ParaList ')' @3 . '{' FuncBody '}'

    '{'  shift, and go to state 30


state 28

   11 VarDecl: Type Identifier '[' . Integer ']'

    INTEGER  shift, and go to state 15

    Integer  go to state 31


state 29

    9 VarDefn: Type Identifier '[' Integer @2 ']' ';' .

    $default  reduce using rule 9 (VarDefn)


state 30

   13 FuncDefn: Type Identifier '(' ParaList ')' @3 '{' . FuncBody '}'

    $default  reduce using rule 20 (FuncBody)

    FuncBody  go to state 32


state 31

   11 VarDecl: Type Identifier '[' Integer . ']'

    ']'  shift, and go to state 33


state 32

   13 FuncDefn: Type Identifier '(' ParaList ')' @3 '{' FuncBody . '}'
   18 FuncBody: FuncBody . FuncDecl
   19         | FuncBody . Statement

    RETURN      shift, and go to state 34
    INT         shift, and go to state 5
    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 10
    '{'         shift, and go to state 37
    '}'         shift, and go to state 38

    VarDefn     go to state 39
    FuncDecl    go to state 40
    Type        go to state 41
    Statement   go to state 42
    Identifier  go to state 43


state 33

   11 VarDecl: Type Identifier '[' Integer ']' .

    $default  reduce using rule 11 (VarDecl)


state 34

   32 Statement: RETURN . Expression ';'

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 52
    Integer       go to state 53
    Identifier    go to state 54


state 35

   25 Statement: IF . '(' Expression ')' @5 Statement StatementElse

    '('  shift, and go to state 55


state 36

   28 Statement: WHILE . @6 '(' Expression ')' @7 Statement

    $default  reduce using rule 26 (@6)

    @6  go to state 56


state 37

   23 Statement: '{' . @4 StatementLine '}'

    $default  reduce using rule 22 (@4)

    @4  go to state 57


state 38

   13 FuncDefn: Type Identifier '(' ParaList ')' @3 '{' FuncBody '}' .

    $default  reduce using rule 13 (FuncDefn)


state 39

   31 Statement: VarDefn .

    $default  reduce using rule 31 (Statement)


state 40

   18 FuncBody: FuncBody FuncDecl .

    $default  reduce using rule 18 (FuncBody)


state 41

    7 VarDefn: Type . Identifier ';'
    9        | Type . Identifier '[' Integer @2 ']' ';'
   14 FuncDecl: Type . Identifier '(' ParaList ')' ';'

    IDENTIFIER  shift, and go to state 10

    Identifier  go to state 58


state 42

   19 FuncBody: FuncBody Statement .

    $default  reduce using rule 19 (FuncBody)


state 43

   29 Statement: Identifier . '=' Expression ';'
   30          | Identifier . '[' Expression ']' '=' Expression ';'

    '['  shift, and go to state 59
    '='  shift, and go to state 60


state 44

   41 p1Expression: MINUS . p1Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 61
    Integer       go to state 53
    Identifier    go to state 54


state 45

   44 p1Expression: '(' . Expression ')'

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 62
    Integer       go to state 53
    Identifier    go to state 54


state 46

   40 p1Expression: '!' . p1Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 63
    Integer       go to state 53
    Identifier    go to state 54


state 47

   45 p2Expression: p1Expression .

    $default  reduce using rule 45 (p2Expression)


state 48

   46 p2Expression: p2Expression . TIMES p1Expression
   47             | p2Expression . OVER p1Expression
   48             | p2Expression . MOD p1Expression
   49 p3Expression: p2Expression .

    MOD    shift, and go to state 64
    OVER   shift, and go to state 65
    TIMES  shift, and go to state 66

    $default  reduce using rule 49 (p3Expression)


state 49

   50 p3Expression: p3Expression . PLUS p2Expression
   51             | p3Expression . MINUS p2Expression
   52 p4Expression: p3Expression .

    MINUS  shift, and go to state 67
    PLUS   shift, and go to state 68

    $default  reduce using rule 52 (p4Expression)


state 50

   53 p4Expression: p4Expression . LT p3Expression
   54             | p4Expression . EQ p3Expression
   55             | p4Expression . GT p3Expression
   56             | p4Expression . UNEQ p3Expression
   57 p5Expression: p4Expression .

    UNEQ  shift, and go to state 69
    EQ    shift, and go to state 70
    LT    shift, and go to state 71
    GT    shift, and go to state 72

    $default  reduce using rule 57 (p5Expression)


state 51

   58 p5Expression: p5Expression . AND p4Expression
   59             | p5Expression . OR p4Expression
   60 Expression: p5Expression .

    OR   shift, and go to state 73
    AND  shift, and go to state 74

    $default  reduce using rule 60 (Expression)


state 52

   32 Statement: RETURN Expression . ';'

    ';'  shift, and go to state 75


state 53

   38 p1Expression: Integer .

    $default  reduce using rule 38 (p1Expression)


state 54

   39 p1Expression: Identifier .
   42             | Identifier . '(' IdenList ')'
   43             | Identifier . '[' Expression ']'

    '['  shift, and go to state 76
    '('  shift, and go to state 77

    $default  reduce using rule 39 (p1Expression)


state 55

   25 Statement: IF '(' . Expression ')' @5 Statement StatementElse

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 78
    Integer       go to state 53
    Identifier    go to state 54


state 56

   28 Statement: WHILE @6 . '(' Expression ')' @7 Statement

    '('  shift, and go to state 79


state 57

   23 Statement: '{' @4 . StatementLine '}'

    $default  reduce using rule 37 (StatementLine)

    StatementLine  go to state 80


state 58

    7 VarDefn: Type Identifier . ';'
    9        | Type Identifier . '[' Integer @2 ']' ';'
   14 FuncDecl: Type Identifier . '(' ParaList ')' ';'

    ';'  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 81


state 59

   30 Statement: Identifier '[' . Expression ']' '=' Expression ';'

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 82
    Integer       go to state 53
    Identifier    go to state 54


state 60

   29 Statement: Identifier '=' . Expression ';'

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 83
    Integer       go to state 53
    Identifier    go to state 54


state 61

   41 p1Expression: MINUS p1Expression .

    $default  reduce using rule 41 (p1Expression)


state 62

   44 p1Expression: '(' Expression . ')'

    ')'  shift, and go to state 84


state 63

   40 p1Expression: '!' p1Expression .

    $default  reduce using rule 40 (p1Expression)


state 64

   48 p2Expression: p2Expression MOD . p1Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 85
    Integer       go to state 53
    Identifier    go to state 54


state 65

   47 p2Expression: p2Expression OVER . p1Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 86
    Integer       go to state 53
    Identifier    go to state 54


state 66

   46 p2Expression: p2Expression TIMES . p1Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 87
    Integer       go to state 53
    Identifier    go to state 54


state 67

   51 p3Expression: p3Expression MINUS . p2Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 88
    Integer       go to state 53
    Identifier    go to state 54


state 68

   50 p3Expression: p3Expression PLUS . p2Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 89
    Integer       go to state 53
    Identifier    go to state 54


state 69

   56 p4Expression: p4Expression UNEQ . p3Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 90
    Integer       go to state 53
    Identifier    go to state 54


state 70

   54 p4Expression: p4Expression EQ . p3Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 91
    Integer       go to state 53
    Identifier    go to state 54


state 71

   53 p4Expression: p4Expression LT . p3Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 92
    Integer       go to state 53
    Identifier    go to state 54


state 72

   55 p4Expression: p4Expression GT . p3Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 93
    Integer       go to state 53
    Identifier    go to state 54


state 73

   59 p5Expression: p5Expression OR . p4Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 94
    Integer       go to state 53
    Identifier    go to state 54


state 74

   58 p5Expression: p5Expression AND . p4Expression

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 95
    Integer       go to state 53
    Identifier    go to state 54


state 75

   32 Statement: RETURN Expression ';' .

    $default  reduce using rule 32 (Statement)


state 76

   43 p1Expression: Identifier '[' . Expression ']'

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 96
    Integer       go to state 53
    Identifier    go to state 54


state 77

   42 p1Expression: Identifier '(' . IdenList ')'

    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 65 (IdenList)

    IdenList    go to state 97
    Integer     go to state 98
    Identifier  go to state 99


state 78

   25 Statement: IF '(' Expression . ')' @5 Statement StatementElse

    ')'  shift, and go to state 100


state 79

   28 Statement: WHILE @6 '(' . Expression ')' @7 Statement

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 101
    Integer       go to state 53
    Identifier    go to state 54


state 80

   23 Statement: '{' @4 StatementLine . '}'
   36 StatementLine: StatementLine . Statement

    RETURN      shift, and go to state 34
    INT         shift, and go to state 5
    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 10
    '{'         shift, and go to state 37
    '}'         shift, and go to state 102

    VarDefn     go to state 39
    Type        go to state 103
    Statement   go to state 104
    Identifier  go to state 43


state 81

   14 FuncDecl: Type Identifier '(' . ParaList ')' ';'

    INT  shift, and go to state 5

    $default  reduce using rule 17 (ParaList)

    VarDecl   go to state 17
    ParaList  go to state 105
    Type      go to state 19


state 82

   30 Statement: Identifier '[' Expression . ']' '=' Expression ';'

    ']'  shift, and go to state 106


state 83

   29 Statement: Identifier '=' Expression . ';'

    ';'  shift, and go to state 107


state 84

   44 p1Expression: '(' Expression ')' .

    $default  reduce using rule 44 (p1Expression)


state 85

   48 p2Expression: p2Expression MOD p1Expression .

    $default  reduce using rule 48 (p2Expression)


state 86

   47 p2Expression: p2Expression OVER p1Expression .

    $default  reduce using rule 47 (p2Expression)


state 87

   46 p2Expression: p2Expression TIMES p1Expression .

    $default  reduce using rule 46 (p2Expression)


state 88

   46 p2Expression: p2Expression . TIMES p1Expression
   47             | p2Expression . OVER p1Expression
   48             | p2Expression . MOD p1Expression
   51 p3Expression: p3Expression MINUS p2Expression .

    MOD    shift, and go to state 64
    OVER   shift, and go to state 65
    TIMES  shift, and go to state 66

    $default  reduce using rule 51 (p3Expression)


state 89

   46 p2Expression: p2Expression . TIMES p1Expression
   47             | p2Expression . OVER p1Expression
   48             | p2Expression . MOD p1Expression
   50 p3Expression: p3Expression PLUS p2Expression .

    MOD    shift, and go to state 64
    OVER   shift, and go to state 65
    TIMES  shift, and go to state 66

    $default  reduce using rule 50 (p3Expression)


state 90

   50 p3Expression: p3Expression . PLUS p2Expression
   51             | p3Expression . MINUS p2Expression
   56 p4Expression: p4Expression UNEQ p3Expression .

    MINUS  shift, and go to state 67
    PLUS   shift, and go to state 68

    $default  reduce using rule 56 (p4Expression)


state 91

   50 p3Expression: p3Expression . PLUS p2Expression
   51             | p3Expression . MINUS p2Expression
   54 p4Expression: p4Expression EQ p3Expression .

    MINUS  shift, and go to state 67
    PLUS   shift, and go to state 68

    $default  reduce using rule 54 (p4Expression)


state 92

   50 p3Expression: p3Expression . PLUS p2Expression
   51             | p3Expression . MINUS p2Expression
   53 p4Expression: p4Expression LT p3Expression .

    MINUS  shift, and go to state 67
    PLUS   shift, and go to state 68

    $default  reduce using rule 53 (p4Expression)


state 93

   50 p3Expression: p3Expression . PLUS p2Expression
   51             | p3Expression . MINUS p2Expression
   55 p4Expression: p4Expression GT p3Expression .

    MINUS  shift, and go to state 67
    PLUS   shift, and go to state 68

    $default  reduce using rule 55 (p4Expression)


state 94

   53 p4Expression: p4Expression . LT p3Expression
   54             | p4Expression . EQ p3Expression
   55             | p4Expression . GT p3Expression
   56             | p4Expression . UNEQ p3Expression
   59 p5Expression: p5Expression OR p4Expression .

    UNEQ  shift, and go to state 69
    EQ    shift, and go to state 70
    LT    shift, and go to state 71
    GT    shift, and go to state 72

    $default  reduce using rule 59 (p5Expression)


state 95

   53 p4Expression: p4Expression . LT p3Expression
   54             | p4Expression . EQ p3Expression
   55             | p4Expression . GT p3Expression
   56             | p4Expression . UNEQ p3Expression
   58 p5Expression: p5Expression AND p4Expression .

    UNEQ  shift, and go to state 69
    EQ    shift, and go to state 70
    LT    shift, and go to state 71
    GT    shift, and go to state 72

    $default  reduce using rule 58 (p5Expression)


state 96

   43 p1Expression: Identifier '[' Expression . ']'

    ']'  shift, and go to state 108


state 97

   42 p1Expression: Identifier '(' IdenList . ')'
   63 IdenList: IdenList . ',' Identifier
   64         | IdenList . ',' Integer

    ')'  shift, and go to state 109
    ','  shift, and go to state 110


state 98

   61 IdenList: Integer .

    $default  reduce using rule 61 (IdenList)


state 99

   62 IdenList: Identifier .

    $default  reduce using rule 62 (IdenList)


state 100

   25 Statement: IF '(' Expression ')' . @5 Statement StatementElse

    $default  reduce using rule 24 (@5)

    @5  go to state 111


state 101

   28 Statement: WHILE @6 '(' Expression . ')' @7 Statement

    ')'  shift, and go to state 112


state 102

   23 Statement: '{' @4 StatementLine '}' .

    $default  reduce using rule 23 (Statement)


state 103

    7 VarDefn: Type . Identifier ';'
    9        | Type . Identifier '[' Integer @2 ']' ';'

    IDENTIFIER  shift, and go to state 10

    Identifier  go to state 113


state 104

   36 StatementLine: StatementLine Statement .

    $default  reduce using rule 36 (StatementLine)


state 105

   14 FuncDecl: Type Identifier '(' ParaList . ')' ';'

    ')'  shift, and go to state 114


state 106

   30 Statement: Identifier '[' Expression ']' . '=' Expression ';'

    '='  shift, and go to state 115


state 107

   29 Statement: Identifier '=' Expression ';' .

    $default  reduce using rule 29 (Statement)


state 108

   43 p1Expression: Identifier '[' Expression ']' .

    $default  reduce using rule 43 (p1Expression)


state 109

   42 p1Expression: Identifier '(' IdenList ')' .

    $default  reduce using rule 42 (p1Expression)


state 110

   63 IdenList: IdenList ',' . Identifier
   64         | IdenList ',' . Integer

    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10

    Integer     go to state 116
    Identifier  go to state 117


state 111

   25 Statement: IF '(' Expression ')' @5 . Statement StatementElse

    RETURN      shift, and go to state 34
    INT         shift, and go to state 5
    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 10
    '{'         shift, and go to state 37

    VarDefn     go to state 39
    Type        go to state 103
    Statement   go to state 118
    Identifier  go to state 43


state 112

   28 Statement: WHILE @6 '(' Expression ')' . @7 Statement

    $default  reduce using rule 27 (@7)

    @7  go to state 119


state 113

    7 VarDefn: Type Identifier . ';'
    9        | Type Identifier . '[' Integer @2 ']' ';'

    ';'  shift, and go to state 12
    '['  shift, and go to state 13


state 114

   14 FuncDecl: Type Identifier '(' ParaList ')' . ';'

    ';'  shift, and go to state 26


state 115

   30 Statement: Identifier '[' Expression ']' '=' . Expression ';'

    MINUS       shift, and go to state 44
    INTEGER     shift, and go to state 15
    IDENTIFIER  shift, and go to state 10
    '('         shift, and go to state 45
    '!'         shift, and go to state 46

    p1Expression  go to state 47
    p2Expression  go to state 48
    p3Expression  go to state 49
    p4Expression  go to state 50
    p5Expression  go to state 51
    Expression    go to state 120
    Integer       go to state 53
    Identifier    go to state 54


state 116

   64 IdenList: IdenList ',' Integer .

    $default  reduce using rule 64 (IdenList)


state 117

   63 IdenList: IdenList ',' Identifier .

    $default  reduce using rule 63 (IdenList)


state 118

   25 Statement: IF '(' Expression ')' @5 Statement . StatementElse

    ELSE  shift, and go to state 121

    ELSE      [reduce using rule 35 (StatementElse)]
    $default  reduce using rule 35 (StatementElse)

    StatementElse  go to state 122


state 119

   28 Statement: WHILE @6 '(' Expression ')' @7 . Statement

    RETURN      shift, and go to state 34
    INT         shift, and go to state 5
    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 10
    '{'         shift, and go to state 37

    VarDefn     go to state 39
    Type        go to state 103
    Statement   go to state 123
    Identifier  go to state 43


state 120

   30 Statement: Identifier '[' Expression ']' '=' Expression . ';'

    ';'  shift, and go to state 124


state 121

   34 StatementElse: ELSE . @8 Statement

    $default  reduce using rule 33 (@8)

    @8  go to state 125


state 122

   25 Statement: IF '(' Expression ')' @5 Statement StatementElse .

    $default  reduce using rule 25 (Statement)


state 123

   28 Statement: WHILE @6 '(' Expression ')' @7 Statement .

    $default  reduce using rule 28 (Statement)


state 124

   30 Statement: Identifier '[' Expression ']' '=' Expression ';' .

    $default  reduce using rule 30 (Statement)


state 125

   34 StatementElse: ELSE @8 . Statement

    RETURN      shift, and go to state 34
    INT         shift, and go to state 5
    IF          shift, and go to state 35
    WHILE       shift, and go to state 36
    IDENTIFIER  shift, and go to state 10
    '{'         shift, and go to state 37

    VarDefn     go to state 39
    Type        go to state 103
    Statement   go to state 126
    Identifier  go to state 43


state 126

   34 StatementElse: ELSE @8 Statement .

    $default  reduce using rule 34 (StatementElse)
